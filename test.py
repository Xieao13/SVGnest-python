import re
import matplotlib.pyplot as plt
import pandas as pd
from io import StringIO

# 日志数据
log_data = """
2025-07-04 04:06:27,355 - __main__ - INFO - 进度 100/10000: 平均损失=65.4966, 平均奖励=18.5052, 平均利用率=0.752
2025-07-04 04:07:04,089 - __main__ - INFO - 进度 200/10000: 平均损失=65.1243, 平均奖励=18.5389, 平均利用率=0.747
2025-07-04 04:07:40,630 - __main__ - INFO - 进度 300/10000: 平均损失=63.4015, 平均奖励=18.0938, 平均利用率=0.744
2025-07-04 04:08:18,219 - __main__ - INFO - 进度 400/10000: 平均损失=63.6033, 平均奖励=18.1407, 平均利用率=0.742
2025-07-04 04:23:55,805 - __main__ - INFO - 进度 500/10000: 平均损失=63.1767, 平均奖励=17.9856, 平均利用率=0.742
2025-07-04 04:24:30,775 - __main__ - INFO - 进度 600/10000: 平均损失=63.1930, 平均奖励=18.0093, 平均利用率=0.741
2025-07-04 04:25:09,117 - __main__ - INFO - 进度 700/10000: 平均损失=63.0053, 平均奖励=17.9404, 平均利用率=0.740
2025-07-04 04:25:47,280 - __main__ - INFO - 进度 800/10000: 平均损失=63.5915, 平均奖励=18.1037, 平均利用率=0.741
2025-07-04 04:26:24,223 - __main__ - INFO - 进度 900/10000: 平均损失=63.9340, 平均奖励=18.2091, 平均利用率=0.739
2025-07-04 04:27:02,918 - __main__ - INFO - 进度 1000/10000: 平均损失=64.2105, 平均奖励=18.2823, 平均利用率=0.739
2025-07-04 04:27:37,924 - __main__ - INFO - 进度 1100/10000: 极失=63.1216, 平均奖励=17.9835, 平均利用率=0.738
2025-07-04 04:28:13,720 - __main__ - INFO - 进度 1200/10000: 平均损失=62.6201, 平均奖励=17.8432, 平均利用率=0.738
2025-07-04 04:28:48,922 - __main__ - INFO - 进度 1300/10000: 平均损失=62.6103, 平均奖励=17.8473, 平均利用率=0.739
2025-07-04 04:29:22,902 - __main__ - INFO - 进度 1400/10000: 平均损失=62.0687, 平均奖励=17.7003, 平均利用率=0.739
2025-07-04 04:29:57,508 - __main__ - INFO - 进度 1500/10000: 平均损失=62.0776, 平均奖励=17.7150, 平均利用率=0.739
2025-07-04 04:30:33,871 - __main__ - INFO - 进度 1600/10000: 平均损失=62.1171, 平均奖励=17.7259, 平均利用率=0.739
2025-07-04 04:31:12,519 - __main__ - INFO - 进度 1700/10000: 平均损失=61.5731, 平均奖励=17.5633, 平均利用率=0.739
2025-07-04 04:31:51,795 - __main__ - INFO - 进度 1800/10000: 平均损失=61.4976, 平均奖励=17.5419, 平均利用率=0.739
2025-07-04 04:32:30,738 - __main__ - INFO - 进度 1900/10000: 平均损失=61.5433, 平均奖励=17.5581, 平均利用率=0.740
2025-07-04 04:33:07,523 - __main__ - INFO - 进度 2000/10000: 平均损失=61.5006, 平均奖励=17.5635, 平均利用率=0.742
2025-07-04 04:33:44,094 - __main__ - INFO - 进度 2100/10000: 平均损失=61.4449, 平均奖励=17.5777, 平均利用率=0.744
2025-07-04 04:35:42,202 - __main__ - INFO - 进度 2200/10000: 平均损失=61.4095, 平均奖励=17.5943, 平均利用率=0.746
2025-07-04 04:36:21,263 - __main__ - INFO - 进度 2300/10000: 平均损失=61.3975, 平均奖励=17.6288, 平均利用率=0.748
2025-07-04 04:51:58,103 - __main__ - INFO - 进度 2400/10000: 平均损失=61.4733, 平均奖励=17.6999, 平均利用率=0.750
2025-07-04 04:52:33,512 - __main__ - INFO - 进度 2500/10000: 平均损失=61.3227, 平均奖励=17.7076, 平均利用率=0.752
2025-07-04 05:09:57,735 - __main__ - INFO - 进度 2600/10000: 平均损失=61.2243, 平均奖励=17.7281, 平均利用率=0.753
2025-07-04 05:10:33,243 - __main__ - INFO - 进度 2700/10000: 平均损失=61.1047, 平均奖励=17.7538, 平均利用率=0.754
2025-07-04 05:13:33,591 - __main__ - INFO - 进度 2800/10000: 平均损失=61.0914, 平均奖励=17.7955, 平均利用率=0.756
2025-07-04 05:30:15,666 - __main__ - INFO - 进度 2900/10000: 平均损失=60.9923, 平均奖励=17.8157, 平均利用率=0.757
2025-07-04 05:47:09,431 - __main__ - INFO - 进度 3000/10000: 平均损失=60.8566, 平均奖励=17.8281, 平均利用率=0.758
2025-07-04 05:47:44,932 - __main__ - INFO - 进度 3100/10000: 平均损失=60.7082, 平均奖励=17.8306, 平均利用率=0.759
2025-07-04 06:03:19,295 - __main__ - INFO - 进度 3200/10000: 平均损失=60.5728, 平均奖励=17.8335, 平均利用率=0.760
2025-07-04 06:20:47,789 - __main__ - INFO - 进度 3300/10000: 平均损失=60.5001, 平均奖励=17.8545, 平均利用率=0.761
2025-07-04 06:37:17,538 - __main__ - INFO - 进度 3400/10000: 平均损失=60.5407, 平均奖励=17.9010, 平均利用率=0.762
2025-07-04 06:37:52,612 - __main__ - INFO - 进度 3500/10000: 平均损失=60.5045, 平均奖励=17.9187, 平均利用率=0.762
2025-07-04 06:55:18,772 - __main__ - INFO - 进度 3600/10000: 平均损失=60.4837, 平均奖励=17.9302, 平均利用率=0.764
2025-07-04 07:12:27,097 - __main__ - INFO - 进度 3700/10000: 平均损失=60.3580, 平均奖励=17.9340, 平均利用率=0.765
2025-07-04 07:28:18,783 - __main__ - INFO - 进度 3800/10000: 平均损失=60.1973, 平均奖励=17.9362, 平均利用率=0.766
2025-07-04 07:28:53,408 - __main__ - INFO - 进度 3900/10000: 平均损失=60.0427, 平均奖励=17.9453, 平均利用率=0.768
2025-07-04 07:38:42,396 - __main__ - INFO - 进度 4000/10000: 平均损失=59.9374, 平均奖励=17.9639, 平均利用率=0.769
2025-07-04 07:55:19,831 - __main__ - INFO - 进度 4100/10000: 平均损失=59.8214, 平均奖励=17.9866, 平均利用率=0.770
2025-07-04 08:12:55,137 - __main__ - INFO - 进度 4200/10000: 平均损失=59.6480, 平均奖励=17.9859, 平均利用率=0.771
2025-07-04 08:28:48,570 - __极 - INFO - 进度 4300/10000: 平均损失=59.4706, 平均奖励=17.9879, 平均利用率=0.772
2025-07-04 08:39:07,111 - __main__ - INFO - 进度 4400/10000: 平均损失=59.2391, 平均奖励=17.9820, 平均利用率=0.772
2025-07-04 08:39:45,292 - __main__ - INFO - 进度 4500/10000: 平均损失=58.9972, 平均奖励=17.9792, 平均利用率=0.772
2025-07-04 08:56:48,581 - __main__ - INFO - 进度 4600/10000: 平均损失=58.7008, 平均奖励=17.9651, 平均利用率=0.771
2025-07-04 09:13:30,026 - __main__ - INFO - 进度 4700/10000: 平均损失=58.4231, 平均奖励=17.9438, 平均利用率=0.771
2025-07-04 09:30:11,867 - __main__ - INFO - 进度 4800/10000: 平均损失=58.1431, 平均奖励=17.9319, 平均利用率=0.771
2025-07-04 09:40:06,577 - __main__ - INFO - 进度 4900/10000: 平均损失=57.8651, 平均奖励=17.9206, 平均利用率=0.771
2025-07-04 09:40:44,348 - __main__ - INFO - 进度 5000/10000: 平均损失=57.6356, 平均奖励=17.9267, 平均利用率=0.771
2025-07-04 09:56:53,265 - __main__ - INFO - 进度 5100/10000: 平均损失=57.4009, 平均奖励=17.9272, 平均利用率=0.771
2025-07-04 10:14:21,338 - __main__ - INFO - 进度 5200/10000: 平均损失=57.0979, 平均奖励=17.9073, 平均利用率=0.771
2025-07-04 10:31:05,460 - __main__ - INFO - 进度 5300/10000: 平均损失=56.8382, 平均奖励=17.8953, 平均利用率=0.771
2025-07-04 10:31:46,457 - __main__ - INFO - 进度 5400/10000: 平均损失=56.6577, 平均奖励=17.9097, 平均利用率=0.770
2025-07-04 10:32:26,598 - __main__ - INFO - 进度 5500/10000: 平均损失=56.4437, 平均奖励=17.9083, 平均利用率=0.770
2025-07-04 10:33:05,851 - __main__ - INFO - 进度 5600/10000: 平均损失=56.1645, 平均奖励=17.8972, 平均利用率=0.770
2025-07-04 10:33:42,828 - __main__ - INFO - 进度 5700/10000: 平均损失=55.9060, 平均奖励=17.8871, 平均利用率=0.770
2025-07-04 10:34:21,300 - __main__ - INFO - 进度 5800/10000: 平均损失=55.6391, 平均奖励=17.8771, 平均利用率=0.770
2025-07-04 10:35:01,034 - __main__ - INFO - 进度 5900/10000: 平均损失=55.4060, 平均奖励=17.8766, 平均利用率=0.770
2025-07-04 10:35:40,026 - __main__ - INFO - 进度 6000/10000: 平均损失=55.2021, 平均奖励=17.8797, 平均利用率=0.769
2025-07-04 10:36:19,677 - __main__ - INFO - 进度 6100/10000: 平均损失=54.9552, 平均奖励=17.8746, 平均利用率=0.769
2025-07-04 10:41:19,537 - __main__ - INFO - 进度 6200/10000: 平均损失=54.7185, 平均奖励=17.8677, 平均利用率=0.769
2025-07-04 10:57:32,458 - __main__ - INFO - 进度 6300/10000: 平均损失=54.4629, 平均奖励=17.8556, 平均利用率=0.769
2025-07-04 10:58:11,197 - __main__ - INFO - 进度 6400/10000: 平均损失=54.3301, 平均奖励=17.8719, 平均利用率=0.769
2025-07-04 11:14:30,025 - __main__ - INFO - 进度 6500/10000: 平均损失=54.1669, 平均奖励=17.8773, 平均利用率=0.769
2025-07-04 11:30:18,766 - __main__ - INFO - 进度 6600/10000: 平均损失=53.9743, 平均奖励=17.8695, 平均利用率=0.769
2025-07-04 11:42:17,006 - __main__ - INFO - 进度 6700/10000: 平均损失=53.7940, 平均奖励=17.8772, 平均利用率=0.769
2025-07-04 11:58:35,630 - __main__ - INFO - 进度 6800/10000: 平均损失=53.6074, 平均奖励=17.8790, 平均利用率=0.769
2025-07-04 11:59:12,615 - __main__ - INFO - 进度 6900/10000: 平均损失=53.4280, 平均奖励=17.8797, 平均利用率极.769
2025-07-04 12:16:33,662 - __main__ - INFO - 进度 7000/10000: 平均损失=53.2353, 平均奖励=17.8730, 平均利用率=0.769
2025-07-04 12:32:34,435 - __main__ - INFO - 进度 7100/10000: 平均损失=53.0130, 平均奖励=17.8609, 平均利用率=0.769
2025-07-04 12:43:11,943 - __main__ - INFO - 进度 7200/10000: 平均损失=52.7840, 平均奖励=17.8558, 平均利用率=0.769
2025-07-04 12:43:48,736 - __main__ - INFO - 进度 7300/10000: 平均损失=52.6011, 平均奖励=17.8579, 平均利用率=0.769
2025-07-04 12:59:24,412 - __main__ - INFO - 进度 7400/10000: 平均损失=52.4208, 平均奖励=17.8489, 平均利用率=0.769
2025-07-04 13:16:12,360 - __main__ - INFO - 进度 7500/10000: 平均损失=52.0948, 平均奖励=17.8344, 平均利用率=0.769
2025-07-04 13:21:53,154 - __main__ - INFO - 进度 7600/10000: 平均损失=51.9139, 平均奖励=17.8383, 平均利用率=0.769
2025-07-04 13:22:20,873 - __main__ - INFO - 进度 7700/10000: 平均损失=51.6969, 平均奖励=17.8302, 平均利用率=0.769
2025-07-04 13:23:00,762 - __main__ - INFO - 进度 7800/10000: 平均损失=51.5413, 平均奖励=17.8359, 平均利用率=0.769
2025-07-04 13:23:41,336 - __main__ - INFO - 进度 7900/10000: 平均损失=51.3692, 平均奖励=17.8380, 平均利用率=0.769
2025-07-04 13:24:20,558 - __main__ - INFO - 进度 8000/10000: 平均损失=51.1461, 平均奖励=17.8337, 平均利用率=0.769
2025-07-04 13:24:58,877 - __main__ - INFO - 进度 8100/10000: 平均损失=50.9501, 平均奖励=17.8290, 平均利用率=0.769
2025-07-04 13:25:38,741 - __main__ - INFO - 进度 8200/10000: 平均损失=50.4767, 平均奖励=17.8157, 平均利用率=0.769
2025-07-04 13:26:18,494 - __main__ - INFO - 进度 8300/10000: 平均损失=50.2813, 平均奖励=17.8093, 平均利用率=0.769
2025-07-04 13:26:58,184 - __main__ - INFO - 进度 8400/10000: 平均损失=50.1256, 平均奖励=17.8085, 平均利用率=0.769
2025-07-04 13:27:37,385 - __main__ - INFO - 进度 8500/10000: 平均损失=49.9437, 平均奖励=17.8039, 平均利用率=0.769
2025-07-04 13:28:16,173 - __main__ - INFO - 进度 8600/10000: 平均损失=49.8153, 平均奖励=17.8067, 平均利用率=0.769
2025-07-04 13:28:55,741 - __main__ - INFO - 进度 8700/10000: 平均损失=49.5901, 平均奖励=17.7942, 平均利用率=0.769
2025-07-04 13:29:32,503 - __main__ - INFO - 进度 8800/10000: 平均损失=49.4487, 平均奖励=17.7915, 平均利用率=0.769
2025-07-04 13:30:08,140 - __main__ - INFO - 进度 8900/10000: 平均损失=49.2501, 平均奖励=17.7804, 平均利用率=0.769
2025-07-04 13:30:49,739 - __main__ - INFO - 进度 9000/10000: 平均损失=49.0527, 平均奖励=17.7851, 平均利用率=0.769
2025-07-04 13:31:29,435 - __main__ - INFO - 进度 9100/10000: 平均损失=48.9366, 平均奖励=17.7919, 平均利用率=0.769
2025-07-04 13:32:08,689 - __main__ - INFO - 进度 9200/10000: 平均损失=48.8698, 平均奖励=17.8024, 平均利用率=0.769
2025-07-04 13:32:48,635 - __main__ - INFO - 进度 9300/10000: 平均损失=48.7455, 平均奖励=17.7997, 平均利用率=0.769
2025-07-04 13:33:28,858 - __main__ - INFO - 进度 9400/10000: 平均损失=48.6580, 平均奖励=17.8018, 平均利用率=0.769
2025-07-04 13:34:08,045 - __main__ - INFO - 进度 9500/10000: 平均损失=48.5200, 平均奖励=17.8020, 平均利用率=0.769
2025-07-04 13:34:47,280 - __main__ - INFO - 进度 9600/10000: 平均损失=48.3904, 平均奖励=17.8013, 平均利用率=0.769
2025-07-04 13:35:26,078 - __main__ - INFO - 进度 9700/10000: 平均损失=48.2910, 平均奖励=17.8020, 平均利用率=0.769
2025-07-04 13:36:05,173 - __main__ - INFO - 进度 9800/10000: 平均损失=48.1281, 平均奖励=17.7979, 平均利用率=0.769
"""

# 数据清洗和解析
def parse_log(log):
    data = []
    for line in log.strip().split('\n'):
        # 提取进度
        progress_match = re.search(r'进度 (\d+)/10000', line)
        if not progress_match:
            continue
        progress = int(progress_match.group(1))
        
        # 提取损失
        loss_match = re.search(r'平均损失=([\d.]+)', line)
        loss = float(loss_match.group(1)) if loss_match else None
        
        # 提取奖励
        reward_match = re.search(r'平均奖励=([\d.]+)', line)
        reward = float(reward_match.group(1)) if reward_match else None
        
        # 提取利用率
        util_match = re.search(r'平均利用率=([\d.]+)', line)
        util = float(util_match.group(1)) if util_match else None
        
        if all([loss, reward, util]):
            data.append([progress, loss, reward, util])
    return data

# 解析日志数据
parsed_data = parse_log(log_data)
df = pd.DataFrame(parsed_data, columns=['Progress', 'Loss', 'Reward', 'Utilization'])

# 创建图表
plt.figure(figsize=(14, 10))

# 损失曲线
plt.subplot(3, 1, 1)
plt.plot(df['Progress'], df['Loss'], 'r-', linewidth=2)
plt.title('Training Loss over Progress')
plt.xlabel('Progress')
plt.ylabel('Loss')
plt.grid(True, linestyle='--', alpha=0.7)
plt.ylim(0, 70)  # 根据数据范围设置

# 奖励曲线
plt.subplot(3, 1, 2)
plt.plot(df['Progress'], df['Reward'], 'g-', linewidth=2)
plt.title('Average Reward over Progress')
plt.xlabel('Progress')
plt.ylabel('Reward')
plt.grid(True, linestyle='--', alpha=0.7)
plt.ylim(17.5, 19.0)  # 根据数据范围设置

# 利用率曲线
plt.subplot(3, 1, 3)
plt.plot(df['Progress'], df['Utilization'], 'b-', linewidth=2)
plt.title('Resource Utilization over Progress')
plt.xlabel('Progress')
plt.ylabel('Utilization')
plt.grid(True, linestyle='--', alpha=0.7)
plt.ylim(0.73, 0.78)  # 根据数据范围设置

plt.tight_layout(pad=3.0)
plt.show()